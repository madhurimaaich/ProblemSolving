import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'dayOfProgrammer' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts INTEGER year as parameter.
     */

    public static String dayOfProgrammer(int year) {
    // Write your code here
    int month=1;
    int dayCount=0;
    int day=256;
    int[] daysInMonth={31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
    if(year %4==0 && (year%100!=0 || year% 400==0)){
          daysInMonth[1]=29;
    }
    if(year==1800){
        daysInMonth[1]=29;
    }
    if(year==1918){
        day=256+13;
    }
    if(year==1900 ){
        day=256-1;
    }
    if(year==1700 ){
        day=256-1;
    }
    while(month<=12 && dayCount+daysInMonth[month-1] < day){
        dayCount+=daysInMonth[month-1];
        month++;
    }
    int date=day-dayCount;
    return String.format("%02d.%02d.%d",date, month, year);
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int year = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.dayOfProgrammer(year);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
